class Solution {
public:
    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = edges.size();
        vector<int>dist1(n, -1);
        vector<int>dist2(n, -1);
        int ans = -1;
        minIndex(edges, node1, dist1);
        minIndex(edges, node2, dist2);
        int dist = INT_MAX;
        for(int i = 0; i < n; i++){
            if(min(dist1[i], dist2[i]) >= 0 && max(dist1[i], dist2[i]) < dist){
                dist = max(dist1[i], dist2[i]);
                ans = i;
            }
        }
        return ans;
    }

    void minIndex(vector<int> &edges, int node, vector<int> &dist){
        int idx = 0;
        while(node != -1 && dist[node] == -1){
            dist[node] = idx++;
            node = edges[node];
        }
    }
};
