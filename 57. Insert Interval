// First Approch , TC O(N)
class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        vector<vector<int>>ans;
        for(auto val : intervals){
            int start = val[0];
            int end = val[1];
            // jb intervals ka range hi chota ho 
            if(end < newInterval[0])
                ans.push_back(val);
            // jb newInterval ka hi range chota ho interval se    
            else if(newInterval[1] < start){
                ans.push_back(newInterval);
                newInterval = val;
            }
            // aur agr dono k middle me aaya
            else{
                newInterval[0] = min(newInterval[0], start);
                newInterval[1] = max(newInterval[1], end);
            }    
        }
        ans.push_back(newInterval);
        return ans;
    }
};

// Second Appproach

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        vector<vector<int>>ans;
        intervals.push_back(newInterval);
        sort(intervals.begin(), intervals.end());
        ans.push_back(intervals[0]);
        int j = 0;
        for(int i = 1; i < intervals.size(); i++){
            if(ans[j][1] >= intervals[i][0])
                ans[j][1] = max(ans[j][1], intervals[i][1]);
            else{
                j++;
                ans.push_back(intervals[i]);
            }    
        }
        return ans;
    }
};
